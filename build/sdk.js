function _isString(string){return"[object String]"==Object.prototype.toString.call(string)}function _isUndefined(obj){return"undefined"==typeof obj}function _isObject(obj){return obj===Object(obj)}var request=require("superagent"),geoAssert=require("geojson-assert"),defaultFrom="-9999-01-01",defaultTo="9999-12-31",Client=function(){},Place=function(){this.names=[],this.geojsons=[],this.sources=[]};Place.prototype.addName=function(name,from,to){if(!_isString(name))throw new Error("name must be a string");return from||(from=defaultFrom),to||(to=defaultTo),this.names.push({name:name,from:from,to:to}),this},Place.prototype.addGeoJSON=function(geojson,from,to){if(!_isObject(geojson))throw new Error("geojson must be an object");if(geoAssert(geojson),"FeatureCollection"==geojson.type||"Feature"==geojson.type)throw new Error("Features are not supported");return from||(from=defaultFrom),to||(to=defaultTo),this.geojsons.push({geojson:geojson,from:from,to:to}),this},Place.prototype.addSource=function(source){if(!_isString(source))throw new Error("source must be a string");return this.sources.push(source),this},Place.prototype.place=function(){return{names:this.names,geojson:this.geojsons,sources:this.sources}},Place.prototype.geoJSON=function(){return this.geojsons},Place.prototype.save=function(){throw new Error("not implemented")},module.exports={createClient:function(options){return new Client(options)},createPlace:function(){return new Place}};